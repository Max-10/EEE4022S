{
	"name": "Upsert_CSV_to_SQL",
	"properties": {
		"description": "Iterates through CleanOutput in Blob container. Upserts the csv into the appropriate Table, then moves the csv into a historic folder.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EventOutputCSV",
						"type": "DatasetReference"
					},
					"name": "WeightLogCSV"
				},
				{
					"dataset": {
						"referenceName": "EventOutputCSV",
						"type": "DatasetReference"
					},
					"name": "TagIDCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "PenguinEvent",
						"type": "DatasetReference"
					},
					"name": "SQLTable"
				},
				{
					"dataset": {
						"referenceName": "TagIDTable",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "AlterRow1"
				},
				{
					"name": "AlterRow2"
				}
			],
			"script": "source(output(\n\t\tEventID as short,\n\t\tEpoch as integer,\n\t\tEventDate as date,\n\t\tEventTime as timestamp 'HH:mm:ss',\n\t\tWeight as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['WeightLog*']) ~> WeightLogCSV\nsource(output(\n\t\tEventID as short,\n\t\tEpoch as integer,\n\t\tEventDate as date,\n\t\tEventTime as timestamp 'HH:mm:ss',\n\t\tTagID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['TagLog*'],\n\tpartitionBy('hash', 1)) ~> TagIDCSV\nWeightLogCSV alterRow(upsertIf(true())) ~> AlterRow1\nTagIDCSV alterRow(upsertIf(true())) ~> AlterRow2\nAlterRow1 sink(input(\n\t\tEventID as integer,\n\t\tEpoch as integer,\n\t\tEventDate as date,\n\t\tEventTime as timestamp,\n\t\tPenguinWeight as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['EventID'],\n\tformat: 'table',\n\tpreSQLs:['SET IDENTITY_INSERT [dbo].[PenguinEvent] ON'],\n\tmapColumn(\n\t\tEventID,\n\t\tEpoch,\n\t\tEventDate,\n\t\tEventTime,\n\t\tPenguinWeight = Weight\n\t)) ~> SQLTable\nAlterRow2 sink(input(\n\t\tEventID as integer,\n\t\tEpoch as integer,\n\t\tEventDate as date,\n\t\tEventTime as timestamp,\n\t\tTagID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['EventID'],\n\tformat: 'table',\n\tpreSQLs:['SET IDENTITY_INSERT [dbo].[TagID] ON'],\n\tmapColumn(\n\t\tEventID,\n\t\tEpoch,\n\t\tEventDate,\n\t\tEventTime,\n\t\tTagID\n\t)) ~> sink1"
		}
	}
}