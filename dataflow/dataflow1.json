{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "WeightLogCSV",
						"type": "DatasetReference"
					},
					"name": "WeightLogCSV"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EventOutputCSV",
						"type": "DatasetReference"
					},
					"name": "Sink"
				}
			],
			"transformations": [
				{
					"name": "DateTimeColumn"
				},
				{
					"name": "GenerateSurrogateKey"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "parameters{\n\tInputFileNameCSV as string,\n\tOutputFileNameCSV as string\n}\nsource(output(\n\t\tEpoch as integer,\n\t\tWeight as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:[($InputFileNameCSV)],\n\tpartitionBy('hash', 1)) ~> WeightLogCSV\nWeightLogCSV derive(Date = trim(left(toString(toTimestamp(seconds(Epoch))),10)),\n\t\tTime = trim(right(toString(toTimestamp(seconds(Epoch))),8))) ~> DateTimeColumn\nDateTimeColumn keyGenerate(output(EventID as long),\n\tstartAt: 1L) ~> GenerateSurrogateKey\nGenerateSurrogateKey filter(0.8<Weight\r\n&&Weight<10) ~> Filter1\nFilter1 select(mapColumn(\n\t\tEpoch,\n\t\tWeight,\n\t\tDate,\n\t\tTime,\n\t\tEventID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 alterRow(insertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat(toString(\"WeightEventsUploaded:_\"), toString(currentDate())))],\n\tmapColumn(\n\t\tEventID,\n\t\tEpoch,\n\t\tEventTime = Time,\n\t\tEventDate = Date,\n\t\tPenguinWeight = Weight\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink"
		}
	}
}