{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PenguinFactory"
		},
		"Blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob'"
		},
		"SQLdatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLdatabase'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "InputWeightCSV to CleanedCSV",
						"description": "Cleans weightLog Csv stores it in output PenguinEventDatabase",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"WeightLogCSV": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "CleanedCSV to EventSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "Int32",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "EventID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "Int32",
											"ordinal": 2
										},
										"sink": {
											"name": "Epoch",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"type": "TimeSpan",
											"ordinal": 3
										},
										"sink": {
											"name": "EventTime",
											"type": "TimeSpan",
											"physicalType": "time"
										}
									},
									{
										"source": {
											"type": "DateTime",
											"ordinal": 4
										},
										"sink": {
											"name": "EventDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"type": "Double",
											"ordinal": 5
										},
										"sink": {
											"name": "PenguinWeight",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EventOutputCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PenguinEvent",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-08T11:53:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/datasets/EventOutputCSV')]",
				"[concat(variables('factoryId'), '/datasets/PenguinEvent')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventOutputCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Stores transformed data for export into sql table PenguinEvent.",
				"linkedServiceName": {
					"referenceName": "Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "cleanedoutputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PenguinEvent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLdatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EventID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Epoch",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventDate",
						"type": "date"
					},
					{
						"name": "EventTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "PenguinWeight",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PenguinEvent"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLdatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WeightLogCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "weight_log.csv",
						"container": "rawinputs"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Blob storage of raw inputs, and the cleaned outputs prior to being sent to various sql tables.\nContains weight logs, Tag Logs, and individual weigh event logs.",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLdatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Database which contains tables for directQuery Connection to PowerBi workspace. Contains PenguinEventTable, TagID tables, and potentially WeighBridgeStepEvents",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLdatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "WeightLogCSV",
								"type": "DatasetReference"
							},
							"name": "WeightLogCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "EventOutputCSV",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "DateTimeColumn"
						},
						{
							"name": "GenerateSurrogateKey"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tEpoch as integer,\n\t\tWeight as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> WeightLogCSV\nWeightLogCSV derive(Date = trim(left(toString(toTimestamp(seconds(Epoch))),10)),\n\t\tTime = trim(right(toString(toTimestamp(seconds(Epoch))),8))) ~> DateTimeColumn\nDateTimeColumn keyGenerate(output(EventID as long),\n\tstartAt: 1L) ~> GenerateSurrogateKey\nGenerateSurrogateKey filter(0.8<Weight\r\n&&Weight<10) ~> Filter1\nFilter1 select(mapColumn(\n\t\tEpoch,\n\t\tWeight,\n\t\tDate,\n\t\tTime,\n\t\tEventID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 alterRow(insertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(\"Done\")],\n\tmapColumn(\n\t\tEventID,\n\t\tEpoch,\n\t\tEventTime = Time,\n\t\tEventDate = Date,\n\t\tPenguinWeight = Weight\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WeightLogCSV')]",
				"[concat(variables('factoryId'), '/datasets/EventOutputCSV')]"
			]
		}
	]
}